/* 
http://www.informit.com/articles/article.aspx?p=23618&seqNum=14
*/



#include <signal.h>
#include <stdio.h>
#include <string.h>
#include <sys/time.h>

void wave_tx_timer_handler(int signum)
{
	static int count = 0;
	printf("timer expired %d times\n", ++count);
}

int start_timer(int timer_id)
{
	struct sigaction sa;
	struct itimerval timer;
	int ret;

 	/* Install timer_handler as the signal handler for SIGVTALRM. */
 	memset (&sa, 0, sizeof (sa));
 	sa.sa_handler = &wave_tx_timer_handler;
 	sigaction (SIGVTALRM, &sa, NULL);
 	
 	/* ... and every 250 msec after that. */
   #if 0	/* 아래 것을 열면 주기적으로 발생한다. */
 	//timer.it_interval.tv_sec = 0;
 	//timer.it_interval.tv_usec = 250000;
 	/* Start a virtual timer. It counts down whenever this process is
   	executing. */
  #else
	/* Configure the timer to expire after 250 msec... */
 	timer.it_value.tv_sec = 1;
 	timer.it_value.tv_usec = 0;
  #endif
 	ret = setitimer (ITIMER_VIRTUAL, &timer, NULL);
 	
 	if (ret)
 	{
 		printf("[start_timer] Fail=%d\n", ret);
	}
 	return(ret);
}

int stop_timer(int timer_id)
{
	struct sigaction sa;
	struct itimerval timer;
	int ret;

 	/* Install timer_handler as the signal handler for SIGVTALRM. */
 	memset (&sa, 0, sizeof (sa));
 	sa.sa_handler = &wave_tx_timer_handler;
 	sigaction (SIGVTALRM, &sa, NULL);
 	
 	/* ... and every 250 msec after that. */
   #if 0	/* 아래 것을 열면 주기적으로 발생한다. */
 	//timer.it_interval.tv_sec = 0;
 	//timer.it_interval.tv_usec = 250000;
 	/* Start a virtual timer. It counts down whenever this process is
   	executing. */
  #else
	/* Configure the timer to expire after 250 msec... */
 	timer.it_value.tv_sec = 0;
 	timer.it_value.tv_usec = 0;
  #endif
 	ret = setitimer (ITIMER_VIRTUAL, &timer, NULL);
 	
 	if (ret)
 	{
 		printf("[start_timer] Fail=%d\n", ret);
	}
 	return(ret);
}